{"mappings":"ACAA,6BAA6B,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CAG7B,IAAI,EAAkB,EAClB,EAAoB,EAExB,SAAS,EAAmB,CAAM,EAIhC,OAFG,EAAO,QAAQ,GAAG,OAAO,CAAC,wBAAyB,IAGxD,CAEA,IAAM,EAAuB,SAAS,aAAa,CAAC,qBAE9C,EAAyB,SAAS,aAAa,CAAC,uBAEhD,EAAc,SAAS,gBAAgB,CAAC,eAE9C,EAAY,OAAO,CAAC,SAAA,CAApB,EACE,IAAM,EAAQ,EAAW,WAAW,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAErD,GAAmB,CAAC,CACtB,GAEA,QAAQ,GAAG,CAAC,GAEZ,EAAoB,EAAkB,EAAY,MAAM,CAExD,EAAqB,WAAW,CAAG,EAAmB,GAEtD,EAAuB,WAAW,CAAG,EAAmB,GAExD,QAAQ,GAAG,C,A,S,C,E,G,M,O,C,G,O,E,E,EAAK,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,EAAA,I,A,W,M,A,U,wI,I,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-console */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar totalPopulation = 0;\nvar averagePopulation = 0;\nfunction thousandsSeperator(number) {\n    var numberWithCommas = number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return numberWithCommas;\n}\nvar totalPopulationBlock = document.querySelector(\".total-population\");\nvar averagePopulationBlock = document.querySelector(\".average-population\");\nvar populations = document.querySelectorAll(\".population\");\npopulations.forEach(function(population) {\n    var count = population.textContent.split(\",\").join(\"\");\n    totalPopulation += +count;\n});\nconsole.log(populations);\naveragePopulation = totalPopulation / populations.length;\ntotalPopulationBlock.textContent = thousandsSeperator(totalPopulation);\naveragePopulationBlock.textContent = thousandsSeperator(averagePopulation);\nconsole.log(_to_consumable_array(populations));\n\n//# sourceMappingURL=index.638dc698.js.map\n","/* eslint-disable no-console */\n'use strict';\n\nlet totalPopulation = 0;\nlet averagePopulation = 0;\n\nfunction thousandsSeperator(number) {\n  const numberWithCommas\n   = number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n  return numberWithCommas;\n}\n\nconst totalPopulationBlock = document.querySelector('.total-population');\n\nconst averagePopulationBlock = document.querySelector('.average-population');\n\nconst populations = document.querySelectorAll('.population');\n\npopulations.forEach(population => {\n  const count = population.textContent.split(',').join('');\n\n  totalPopulation += +count;\n});\n\nconsole.log(populations);\n\naveragePopulation = totalPopulation / populations.length;\n\ntotalPopulationBlock.textContent = thousandsSeperator(totalPopulation);\n\naveragePopulationBlock.textContent = thousandsSeperator(averagePopulation);\n\nconsole.log([...populations]);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","totalPopulation","averagePopulation","thousandsSeperator","number","toString","replace","totalPopulationBlock","document","querySelector","averagePopulationBlock","populations","querySelectorAll","forEach","population","count","textContent","split","join","console","log","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","call","slice","constructor","name","test","_non_iterable_spread","TypeError"],"version":3,"file":"index.638dc698.js.map"}